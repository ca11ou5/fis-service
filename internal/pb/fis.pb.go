// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v4.25.1
// source: internal/pb/fis.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FullMappingAndSaveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Application *Application `protobuf:"bytes,1,opt,name=application,proto3" json:"application,omitempty"`
	RequestId   string       `protobuf:"bytes,2,opt,name=requestId,proto3" json:"requestId,omitempty"`
}

func (x *FullMappingAndSaveRequest) Reset() {
	*x = FullMappingAndSaveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_pb_fis_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FullMappingAndSaveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FullMappingAndSaveRequest) ProtoMessage() {}

func (x *FullMappingAndSaveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_pb_fis_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FullMappingAndSaveRequest.ProtoReflect.Descriptor instead.
func (*FullMappingAndSaveRequest) Descriptor() ([]byte, []int) {
	return file_internal_pb_fis_proto_rawDescGZIP(), []int{0}
}

func (x *FullMappingAndSaveRequest) GetApplication() *Application {
	if x != nil {
		return x.Application
	}
	return nil
}

func (x *FullMappingAndSaveRequest) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

type FullMappingAndSaveResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int64  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Error  string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *FullMappingAndSaveResponse) Reset() {
	*x = FullMappingAndSaveResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_pb_fis_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FullMappingAndSaveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FullMappingAndSaveResponse) ProtoMessage() {}

func (x *FullMappingAndSaveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_internal_pb_fis_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FullMappingAndSaveResponse.ProtoReflect.Descriptor instead.
func (*FullMappingAndSaveResponse) Descriptor() ([]byte, []int) {
	return file_internal_pb_fis_proto_rawDescGZIP(), []int{1}
}

func (x *FullMappingAndSaveResponse) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *FullMappingAndSaveResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type Application struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                        string          `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Surname                     string          `protobuf:"bytes,2,opt,name=surname,proto3" json:"surname,omitempty"`
	Patronymic                  string          `protobuf:"bytes,3,opt,name=patronymic,proto3" json:"patronymic,omitempty"`
	Phone                       string          `protobuf:"bytes,4,opt,name=phone,proto3" json:"phone,omitempty"`
	Birthdate                   string          `protobuf:"bytes,5,opt,name=birthdate,proto3" json:"birthdate,omitempty"`
	PassportSeries              string          `protobuf:"bytes,6,opt,name=passportSeries,proto3" json:"passportSeries,omitempty"`
	PassportNumber              string          `protobuf:"bytes,7,opt,name=passportNumber,proto3" json:"passportNumber,omitempty"`
	PassportDate                string          `protobuf:"bytes,8,opt,name=passportDate,proto3" json:"passportDate,omitempty"`
	Sum                         int32           `protobuf:"varint,9,opt,name=sum,proto3" json:"sum,omitempty"`
	UtmMedium                   string          `protobuf:"bytes,10,opt,name=utmMedium,proto3" json:"utmMedium,omitempty"`
	UtmSource                   string          `protobuf:"bytes,11,opt,name=utmSource,proto3" json:"utmSource,omitempty"`
	UtmCampaign                 string          `protobuf:"bytes,12,opt,name=utmCampaign,proto3" json:"utmCampaign,omitempty"`
	UtmContent                  string          `protobuf:"bytes,13,opt,name=utmContent,proto3" json:"utmContent,omitempty"`
	UtmTerm                     string          `protobuf:"bytes,14,opt,name=utmTerm,proto3" json:"utmTerm,omitempty"`
	IpAddressClient             string          `protobuf:"bytes,15,opt,name=ipAddressClient,proto3" json:"ipAddressClient,omitempty"`
	Term                        int32           `protobuf:"varint,16,opt,name=term,proto3" json:"term,omitempty"`
	Gender                      string          `protobuf:"bytes,17,opt,name=gender,proto3" json:"gender,omitempty"`
	ValidPhone                  string          `protobuf:"bytes,18,opt,name=validPhone,proto3" json:"validPhone,omitempty"`
	Agree                       bool            `protobuf:"varint,19,opt,name=agree,proto3" json:"agree,omitempty"`
	BirthPlace                  string          `protobuf:"bytes,20,opt,name=birthPlace,proto3" json:"birthPlace,omitempty"`
	BirthCountry                string          `protobuf:"bytes,21,opt,name=birthCountry,proto3" json:"birthCountry,omitempty"`
	Citizenship                 string          `protobuf:"bytes,22,opt,name=citizenship,proto3" json:"citizenship,omitempty"`
	PassportCode                string          `protobuf:"bytes,23,opt,name=passportCode,proto3" json:"passportCode,omitempty"`
	PassportOrgan               string          `protobuf:"bytes,24,opt,name=passportOrgan,proto3" json:"passportOrgan,omitempty"`
	RegistrationDate            string          `protobuf:"bytes,25,opt,name=registrationDate,proto3" json:"registrationDate,omitempty"`
	RegistrationAddress         string          `protobuf:"bytes,26,opt,name=registrationAddress,proto3" json:"registrationAddress,omitempty"`
	LifeAddress                 string          `protobuf:"bytes,27,opt,name=lifeAddress,proto3" json:"lifeAddress,omitempty"`
	LifeAddressDate             string          `protobuf:"bytes,28,opt,name=lifeAddressDate,proto3" json:"lifeAddressDate,omitempty"`
	DifferentRegistration       bool            `protobuf:"varint,29,opt,name=differentRegistration,proto3" json:"differentRegistration,omitempty"`
	Salary                      int32           `protobuf:"varint,30,opt,name=salary,proto3" json:"salary,omitempty"`
	OtherSalary                 int32           `protobuf:"varint,31,opt,name=otherSalary,proto3" json:"otherSalary,omitempty"`
	MaritalStatus               string          `protobuf:"bytes,32,opt,name=maritalStatus,proto3" json:"maritalStatus,omitempty"`
	SpouseName                  string          `protobuf:"bytes,33,opt,name=spouseName,proto3" json:"spouseName,omitempty"`
	SpouseSurname               string          `protobuf:"bytes,34,opt,name=spouseSurname,proto3" json:"spouseSurname,omitempty"`
	SpousePatronymic            string          `protobuf:"bytes,35,opt,name=spousePatronymic,proto3" json:"spousePatronymic,omitempty"`
	SpouseBirthdate             string          `protobuf:"bytes,36,opt,name=spouseBirthdate,proto3" json:"spouseBirthdate,omitempty"`
	SpousePhone                 string          `protobuf:"bytes,37,opt,name=spousePhone,proto3" json:"spousePhone,omitempty"`
	SocialStatus                string          `protobuf:"bytes,38,opt,name=socialStatus,proto3" json:"socialStatus,omitempty"`
	Education                   string          `protobuf:"bytes,39,opt,name=education,proto3" json:"education,omitempty"`
	AdditionalContactPhone      string          `protobuf:"bytes,40,opt,name=additionalContactPhone,proto3" json:"additionalContactPhone,omitempty"`
	AdditionalContact           string          `protobuf:"bytes,41,opt,name=additionalContact,proto3" json:"additionalContact,omitempty"`
	AdditionalContactSurname    string          `protobuf:"bytes,42,opt,name=additionalContactSurname,proto3" json:"additionalContactSurname,omitempty"`
	AdditionalContactName       string          `protobuf:"bytes,43,opt,name=additionalContactName,proto3" json:"additionalContactName,omitempty"`
	AdditionalContactPatronymic string          `protobuf:"bytes,44,opt,name=additionalContactPatronymic,proto3" json:"additionalContactPatronymic,omitempty"`
	AdditionalContactAgreement  bool            `protobuf:"varint,45,opt,name=additionalContactAgreement,proto3" json:"additionalContactAgreement,omitempty"`
	HasOldPassport              bool            `protobuf:"varint,46,opt,name=hasOldPassport,proto3" json:"hasOldPassport,omitempty"`
	OldPassportSeries           string          `protobuf:"bytes,47,opt,name=oldPassportSeries,proto3" json:"oldPassportSeries,omitempty"`
	OldPassportNumber           string          `protobuf:"bytes,48,opt,name=oldPassportNumber,proto3" json:"oldPassportNumber,omitempty"`
	OldPassportCode             string          `protobuf:"bytes,49,opt,name=oldPassportCode,proto3" json:"oldPassportCode,omitempty"`
	OldPassportDate             string          `protobuf:"bytes,50,opt,name=oldPassportDate,proto3" json:"oldPassportDate,omitempty"`
	OldPassportOrgan            string          `protobuf:"bytes,51,opt,name=oldPassportOrgan,proto3" json:"oldPassportOrgan,omitempty"`
	ChangedCredentials          bool            `protobuf:"varint,52,opt,name=changedCredentials,proto3" json:"changedCredentials,omitempty"`
	OldSurname                  string          `protobuf:"bytes,53,opt,name=oldSurname,proto3" json:"oldSurname,omitempty"`
	OldName                     string          `protobuf:"bytes,54,opt,name=oldName,proto3" json:"oldName,omitempty"`
	OldPatronymic               string          `protobuf:"bytes,55,opt,name=oldPatronymic,proto3" json:"oldPatronymic,omitempty"`
	LastNameChangeReason        string          `protobuf:"bytes,56,opt,name=lastNameChangeReason,proto3" json:"lastNameChangeReason,omitempty"`
	ChangeCredentialsYear       int32           `protobuf:"varint,57,opt,name=changeCredentialsYear,proto3" json:"changeCredentialsYear,omitempty"`
	LivingType                  string          `protobuf:"bytes,58,opt,name=livingType,proto3" json:"livingType,omitempty"`
	WorkName                    string          `protobuf:"bytes,59,opt,name=workName,proto3" json:"workName,omitempty"`
	WorkAge                     string          `protobuf:"bytes,60,opt,name=workAge,proto3" json:"workAge,omitempty"`
	WorkDate                    string          `protobuf:"bytes,61,opt,name=workDate,proto3" json:"workDate,omitempty"`
	WorkEmployerIndustry        string          `protobuf:"bytes,62,opt,name=workEmployerIndustry,proto3" json:"workEmployerIndustry,omitempty"`
	WorkEmployerType            string          `protobuf:"bytes,63,opt,name=workEmployerType,proto3" json:"workEmployerType,omitempty"`
	WorkPhone                   string          `protobuf:"bytes,64,opt,name=workPhone,proto3" json:"workPhone,omitempty"`
	Experience                  string          `protobuf:"bytes,65,opt,name=experience,proto3" json:"experience,omitempty"`
	EmployerType                string          `protobuf:"bytes,66,opt,name=employerType,proto3" json:"employerType,omitempty"`
	WorkPosition                string          `protobuf:"bytes,67,opt,name=workPosition,proto3" json:"workPosition,omitempty"`
	WorkSector                  *WorkSector     `protobuf:"bytes,68,opt,name=workSector,proto3" json:"workSector,omitempty"`
	WorkAddress                 string          `protobuf:"bytes,69,opt,name=workAddress,proto3" json:"workAddress,omitempty"`
	HasCar                      bool            `protobuf:"varint,70,opt,name=hasCar,proto3" json:"hasCar,omitempty"`
	HasCarNumber                bool            `protobuf:"varint,71,opt,name=hasCarNumber,proto3" json:"hasCarNumber,omitempty"`
	CarMark                     string          `protobuf:"bytes,72,opt,name=carMark,proto3" json:"carMark,omitempty"`
	CarModel                    string          `protobuf:"bytes,73,opt,name=carModel,proto3" json:"carModel,omitempty"`
	CarNumber                   string          `protobuf:"bytes,74,opt,name=carNumber,proto3" json:"carNumber,omitempty"`
	CarYear                     string          `protobuf:"bytes,75,opt,name=carYear,proto3" json:"carYear,omitempty"`
	HasRealEstate               bool            `protobuf:"varint,76,opt,name=hasRealEstate,proto3" json:"hasRealEstate,omitempty"`
	RealEstatePropertyType      string          `protobuf:"bytes,77,opt,name=realEstatePropertyType,proto3" json:"realEstatePropertyType,omitempty"`
	RealEstateType              string          `protobuf:"bytes,78,opt,name=realEstateType,proto3" json:"realEstateType,omitempty"`
	RealEstateRooms             string          `protobuf:"bytes,79,opt,name=realEstateRooms,proto3" json:"realEstateRooms,omitempty"`
	RealEstateWayToGet          string          `protobuf:"bytes,80,opt,name=realEstateWayToGet,proto3" json:"realEstateWayToGet,omitempty"`
	RealEstateAddress           string          `protobuf:"bytes,81,opt,name=realEstateAddress,proto3" json:"realEstateAddress,omitempty"`
	ProductName                 string          `protobuf:"bytes,82,opt,name=productName,proto3" json:"productName,omitempty"`
	EMail                       string          `protobuf:"bytes,83,opt,name=eMail,proto3" json:"eMail,omitempty"`
	Region                      string          `protobuf:"bytes,84,opt,name=region,proto3" json:"region,omitempty"`
	AdditionalData              *AdditionalData `protobuf:"bytes,85,opt,name=additionalData,proto3" json:"additionalData,omitempty"`
}

func (x *Application) Reset() {
	*x = Application{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_pb_fis_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Application) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Application) ProtoMessage() {}

func (x *Application) ProtoReflect() protoreflect.Message {
	mi := &file_internal_pb_fis_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Application.ProtoReflect.Descriptor instead.
func (*Application) Descriptor() ([]byte, []int) {
	return file_internal_pb_fis_proto_rawDescGZIP(), []int{2}
}

func (x *Application) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Application) GetSurname() string {
	if x != nil {
		return x.Surname
	}
	return ""
}

func (x *Application) GetPatronymic() string {
	if x != nil {
		return x.Patronymic
	}
	return ""
}

func (x *Application) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *Application) GetBirthdate() string {
	if x != nil {
		return x.Birthdate
	}
	return ""
}

func (x *Application) GetPassportSeries() string {
	if x != nil {
		return x.PassportSeries
	}
	return ""
}

func (x *Application) GetPassportNumber() string {
	if x != nil {
		return x.PassportNumber
	}
	return ""
}

func (x *Application) GetPassportDate() string {
	if x != nil {
		return x.PassportDate
	}
	return ""
}

func (x *Application) GetSum() int32 {
	if x != nil {
		return x.Sum
	}
	return 0
}

func (x *Application) GetUtmMedium() string {
	if x != nil {
		return x.UtmMedium
	}
	return ""
}

func (x *Application) GetUtmSource() string {
	if x != nil {
		return x.UtmSource
	}
	return ""
}

func (x *Application) GetUtmCampaign() string {
	if x != nil {
		return x.UtmCampaign
	}
	return ""
}

func (x *Application) GetUtmContent() string {
	if x != nil {
		return x.UtmContent
	}
	return ""
}

func (x *Application) GetUtmTerm() string {
	if x != nil {
		return x.UtmTerm
	}
	return ""
}

func (x *Application) GetIpAddressClient() string {
	if x != nil {
		return x.IpAddressClient
	}
	return ""
}

func (x *Application) GetTerm() int32 {
	if x != nil {
		return x.Term
	}
	return 0
}

func (x *Application) GetGender() string {
	if x != nil {
		return x.Gender
	}
	return ""
}

func (x *Application) GetValidPhone() string {
	if x != nil {
		return x.ValidPhone
	}
	return ""
}

func (x *Application) GetAgree() bool {
	if x != nil {
		return x.Agree
	}
	return false
}

func (x *Application) GetBirthPlace() string {
	if x != nil {
		return x.BirthPlace
	}
	return ""
}

func (x *Application) GetBirthCountry() string {
	if x != nil {
		return x.BirthCountry
	}
	return ""
}

func (x *Application) GetCitizenship() string {
	if x != nil {
		return x.Citizenship
	}
	return ""
}

func (x *Application) GetPassportCode() string {
	if x != nil {
		return x.PassportCode
	}
	return ""
}

func (x *Application) GetPassportOrgan() string {
	if x != nil {
		return x.PassportOrgan
	}
	return ""
}

func (x *Application) GetRegistrationDate() string {
	if x != nil {
		return x.RegistrationDate
	}
	return ""
}

func (x *Application) GetRegistrationAddress() string {
	if x != nil {
		return x.RegistrationAddress
	}
	return ""
}

func (x *Application) GetLifeAddress() string {
	if x != nil {
		return x.LifeAddress
	}
	return ""
}

func (x *Application) GetLifeAddressDate() string {
	if x != nil {
		return x.LifeAddressDate
	}
	return ""
}

func (x *Application) GetDifferentRegistration() bool {
	if x != nil {
		return x.DifferentRegistration
	}
	return false
}

func (x *Application) GetSalary() int32 {
	if x != nil {
		return x.Salary
	}
	return 0
}

func (x *Application) GetOtherSalary() int32 {
	if x != nil {
		return x.OtherSalary
	}
	return 0
}

func (x *Application) GetMaritalStatus() string {
	if x != nil {
		return x.MaritalStatus
	}
	return ""
}

func (x *Application) GetSpouseName() string {
	if x != nil {
		return x.SpouseName
	}
	return ""
}

func (x *Application) GetSpouseSurname() string {
	if x != nil {
		return x.SpouseSurname
	}
	return ""
}

func (x *Application) GetSpousePatronymic() string {
	if x != nil {
		return x.SpousePatronymic
	}
	return ""
}

func (x *Application) GetSpouseBirthdate() string {
	if x != nil {
		return x.SpouseBirthdate
	}
	return ""
}

func (x *Application) GetSpousePhone() string {
	if x != nil {
		return x.SpousePhone
	}
	return ""
}

func (x *Application) GetSocialStatus() string {
	if x != nil {
		return x.SocialStatus
	}
	return ""
}

func (x *Application) GetEducation() string {
	if x != nil {
		return x.Education
	}
	return ""
}

func (x *Application) GetAdditionalContactPhone() string {
	if x != nil {
		return x.AdditionalContactPhone
	}
	return ""
}

func (x *Application) GetAdditionalContact() string {
	if x != nil {
		return x.AdditionalContact
	}
	return ""
}

func (x *Application) GetAdditionalContactSurname() string {
	if x != nil {
		return x.AdditionalContactSurname
	}
	return ""
}

func (x *Application) GetAdditionalContactName() string {
	if x != nil {
		return x.AdditionalContactName
	}
	return ""
}

func (x *Application) GetAdditionalContactPatronymic() string {
	if x != nil {
		return x.AdditionalContactPatronymic
	}
	return ""
}

func (x *Application) GetAdditionalContactAgreement() bool {
	if x != nil {
		return x.AdditionalContactAgreement
	}
	return false
}

func (x *Application) GetHasOldPassport() bool {
	if x != nil {
		return x.HasOldPassport
	}
	return false
}

func (x *Application) GetOldPassportSeries() string {
	if x != nil {
		return x.OldPassportSeries
	}
	return ""
}

func (x *Application) GetOldPassportNumber() string {
	if x != nil {
		return x.OldPassportNumber
	}
	return ""
}

func (x *Application) GetOldPassportCode() string {
	if x != nil {
		return x.OldPassportCode
	}
	return ""
}

func (x *Application) GetOldPassportDate() string {
	if x != nil {
		return x.OldPassportDate
	}
	return ""
}

func (x *Application) GetOldPassportOrgan() string {
	if x != nil {
		return x.OldPassportOrgan
	}
	return ""
}

func (x *Application) GetChangedCredentials() bool {
	if x != nil {
		return x.ChangedCredentials
	}
	return false
}

func (x *Application) GetOldSurname() string {
	if x != nil {
		return x.OldSurname
	}
	return ""
}

func (x *Application) GetOldName() string {
	if x != nil {
		return x.OldName
	}
	return ""
}

func (x *Application) GetOldPatronymic() string {
	if x != nil {
		return x.OldPatronymic
	}
	return ""
}

func (x *Application) GetLastNameChangeReason() string {
	if x != nil {
		return x.LastNameChangeReason
	}
	return ""
}

func (x *Application) GetChangeCredentialsYear() int32 {
	if x != nil {
		return x.ChangeCredentialsYear
	}
	return 0
}

func (x *Application) GetLivingType() string {
	if x != nil {
		return x.LivingType
	}
	return ""
}

func (x *Application) GetWorkName() string {
	if x != nil {
		return x.WorkName
	}
	return ""
}

func (x *Application) GetWorkAge() string {
	if x != nil {
		return x.WorkAge
	}
	return ""
}

func (x *Application) GetWorkDate() string {
	if x != nil {
		return x.WorkDate
	}
	return ""
}

func (x *Application) GetWorkEmployerIndustry() string {
	if x != nil {
		return x.WorkEmployerIndustry
	}
	return ""
}

func (x *Application) GetWorkEmployerType() string {
	if x != nil {
		return x.WorkEmployerType
	}
	return ""
}

func (x *Application) GetWorkPhone() string {
	if x != nil {
		return x.WorkPhone
	}
	return ""
}

func (x *Application) GetExperience() string {
	if x != nil {
		return x.Experience
	}
	return ""
}

func (x *Application) GetEmployerType() string {
	if x != nil {
		return x.EmployerType
	}
	return ""
}

func (x *Application) GetWorkPosition() string {
	if x != nil {
		return x.WorkPosition
	}
	return ""
}

func (x *Application) GetWorkSector() *WorkSector {
	if x != nil {
		return x.WorkSector
	}
	return nil
}

func (x *Application) GetWorkAddress() string {
	if x != nil {
		return x.WorkAddress
	}
	return ""
}

func (x *Application) GetHasCar() bool {
	if x != nil {
		return x.HasCar
	}
	return false
}

func (x *Application) GetHasCarNumber() bool {
	if x != nil {
		return x.HasCarNumber
	}
	return false
}

func (x *Application) GetCarMark() string {
	if x != nil {
		return x.CarMark
	}
	return ""
}

func (x *Application) GetCarModel() string {
	if x != nil {
		return x.CarModel
	}
	return ""
}

func (x *Application) GetCarNumber() string {
	if x != nil {
		return x.CarNumber
	}
	return ""
}

func (x *Application) GetCarYear() string {
	if x != nil {
		return x.CarYear
	}
	return ""
}

func (x *Application) GetHasRealEstate() bool {
	if x != nil {
		return x.HasRealEstate
	}
	return false
}

func (x *Application) GetRealEstatePropertyType() string {
	if x != nil {
		return x.RealEstatePropertyType
	}
	return ""
}

func (x *Application) GetRealEstateType() string {
	if x != nil {
		return x.RealEstateType
	}
	return ""
}

func (x *Application) GetRealEstateRooms() string {
	if x != nil {
		return x.RealEstateRooms
	}
	return ""
}

func (x *Application) GetRealEstateWayToGet() string {
	if x != nil {
		return x.RealEstateWayToGet
	}
	return ""
}

func (x *Application) GetRealEstateAddress() string {
	if x != nil {
		return x.RealEstateAddress
	}
	return ""
}

func (x *Application) GetProductName() string {
	if x != nil {
		return x.ProductName
	}
	return ""
}

func (x *Application) GetEMail() string {
	if x != nil {
		return x.EMail
	}
	return ""
}

func (x *Application) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *Application) GetAdditionalData() *AdditionalData {
	if x != nil {
		return x.AdditionalData
	}
	return nil
}

type WorkSector struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type        string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *WorkSector) Reset() {
	*x = WorkSector{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_pb_fis_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkSector) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkSector) ProtoMessage() {}

func (x *WorkSector) ProtoReflect() protoreflect.Message {
	mi := &file_internal_pb_fis_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkSector.ProtoReflect.Descriptor instead.
func (*WorkSector) Descriptor() ([]byte, []int) {
	return file_internal_pb_fis_proto_rawDescGZIP(), []int{3}
}

func (x *WorkSector) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *WorkSector) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type AdditionalData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QsParams      *QsParams      `protobuf:"bytes,1,opt,name=qsParams,proto3" json:"qsParams,omitempty"`
	Cookie        string         `protobuf:"bytes,2,opt,name=cookie,proto3" json:"cookie,omitempty"`
	Url           string         `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
	KameleoonData *KameleoonData `protobuf:"bytes,4,opt,name=kameleoonData,proto3" json:"kameleoonData,omitempty"`
}

func (x *AdditionalData) Reset() {
	*x = AdditionalData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_pb_fis_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdditionalData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdditionalData) ProtoMessage() {}

func (x *AdditionalData) ProtoReflect() protoreflect.Message {
	mi := &file_internal_pb_fis_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdditionalData.ProtoReflect.Descriptor instead.
func (*AdditionalData) Descriptor() ([]byte, []int) {
	return file_internal_pb_fis_proto_rawDescGZIP(), []int{4}
}

func (x *AdditionalData) GetQsParams() *QsParams {
	if x != nil {
		return x.QsParams
	}
	return nil
}

func (x *AdditionalData) GetCookie() string {
	if x != nil {
		return x.Cookie
	}
	return ""
}

func (x *AdditionalData) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *AdditionalData) GetKameleoonData() *KameleoonData {
	if x != nil {
		return x.KameleoonData
	}
	return nil
}

type QsParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *QsParams) Reset() {
	*x = QsParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_pb_fis_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QsParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QsParams) ProtoMessage() {}

func (x *QsParams) ProtoReflect() protoreflect.Message {
	mi := &file_internal_pb_fis_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QsParams.ProtoReflect.Descriptor instead.
func (*QsParams) Descriptor() ([]byte, []int) {
	return file_internal_pb_fis_proto_rawDescGZIP(), []int{5}
}

type KameleoonData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *KameleoonData) Reset() {
	*x = KameleoonData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_pb_fis_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KameleoonData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KameleoonData) ProtoMessage() {}

func (x *KameleoonData) ProtoReflect() protoreflect.Message {
	mi := &file_internal_pb_fis_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KameleoonData.ProtoReflect.Descriptor instead.
func (*KameleoonData) Descriptor() ([]byte, []int) {
	return file_internal_pb_fis_proto_rawDescGZIP(), []int{6}
}

var File_internal_pb_fis_proto protoreflect.FileDescriptor

var file_internal_pb_fis_proto_rawDesc = []byte{
	0x0a, 0x15, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x70, 0x62, 0x2f, 0x66, 0x69,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x66, 0x69, 0x73, 0x22, 0x6d, 0x0a, 0x19,
	0x46, 0x75, 0x6c, 0x6c, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x41, 0x6e, 0x64, 0x53, 0x61,
	0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x0b, 0x61, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x66, 0x69, 0x73, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x0b, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a,
	0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x22, 0x4a, 0x0a, 0x1a, 0x46,
	0x75, 0x6c, 0x6c, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x41, 0x6e, 0x64, 0x53, 0x61, 0x76,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0xf1, 0x18, 0x0a, 0x0b, 0x41, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x61, 0x74, 0x72, 0x6f, 0x6e, 0x79,
	0x6d, 0x69, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x61, 0x74, 0x72, 0x6f,
	0x6e, 0x79, 0x6d, 0x69, 0x63, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x62,
	0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x74, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x70, 0x61, 0x73,
	0x73, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x70, 0x61, 0x73, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x65, 0x72, 0x69, 0x65,
	0x73, 0x12, 0x26, 0x0a, 0x0e, 0x70, 0x61, 0x73, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x61, 0x73, 0x73, 0x70,
	0x6f, 0x72, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x61, 0x73,
	0x73, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x70, 0x61, 0x73, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x73, 0x75, 0x6d, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x73, 0x75, 0x6d, 0x12,
	0x1c, 0x0a, 0x09, 0x75, 0x74, 0x6d, 0x4d, 0x65, 0x64, 0x69, 0x75, 0x6d, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x75, 0x74, 0x6d, 0x4d, 0x65, 0x64, 0x69, 0x75, 0x6d, 0x12, 0x1c, 0x0a,
	0x09, 0x75, 0x74, 0x6d, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x75, 0x74, 0x6d, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x75,
	0x74, 0x6d, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x75, 0x74, 0x6d, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x12, 0x1e, 0x0a,
	0x0a, 0x75, 0x74, 0x6d, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x75, 0x74, 0x6d, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a,
	0x07, 0x75, 0x74, 0x6d, 0x54, 0x65, 0x72, 0x6d, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x75, 0x74, 0x6d, 0x54, 0x65, 0x72, 0x6d, 0x12, 0x28, 0x0a, 0x0f, 0x69, 0x70, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x69, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x72, 0x6d, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x74, 0x65, 0x72, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18,
	0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x1e, 0x0a,
	0x0a, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x61, 0x67, 0x72, 0x65, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x61, 0x67,
	0x72, 0x65, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x69, 0x72, 0x74, 0x68, 0x50, 0x6c, 0x61, 0x63,
	0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x69, 0x72, 0x74, 0x68, 0x50, 0x6c,
	0x61, 0x63, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x62, 0x69, 0x72, 0x74, 0x68, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x72, 0x79, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x62, 0x69, 0x72, 0x74, 0x68,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x69, 0x74, 0x69, 0x7a,
	0x65, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x69,
	0x74, 0x69, 0x7a, 0x65, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x61, 0x73,
	0x73, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x70, 0x61, 0x73, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x24, 0x0a,
	0x0d, 0x70, 0x61, 0x73, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x18, 0x18,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x61, 0x73, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x4f, 0x72,
	0x67, 0x61, 0x6e, 0x12, 0x2a, 0x0a, 0x10, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x72,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x12,
	0x30, 0x0a, 0x13, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x72, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x69, 0x66, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x1b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6c, 0x69, 0x66, 0x65, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x6c, 0x69, 0x66, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x44, 0x61, 0x74, 0x65, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6c, 0x69,
	0x66, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x44, 0x61, 0x74, 0x65, 0x12, 0x34, 0x0a,
	0x15, 0x64, 0x69, 0x66, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x64, 0x69,
	0x66, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x18, 0x1e, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x6f,
	0x74, 0x68, 0x65, 0x72, 0x53, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0b, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x53, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x12, 0x24, 0x0a,
	0x0d, 0x6d, 0x61, 0x72, 0x69, 0x74, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x20,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6d, 0x61, 0x72, 0x69, 0x74, 0x61, 0x6c, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x70, 0x6f, 0x75, 0x73, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x21, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x70, 0x6f, 0x75, 0x73, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x70, 0x6f, 0x75, 0x73, 0x65, 0x53, 0x75, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x22, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x70, 0x6f, 0x75,
	0x73, 0x65, 0x53, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x73, 0x70, 0x6f,
	0x75, 0x73, 0x65, 0x50, 0x61, 0x74, 0x72, 0x6f, 0x6e, 0x79, 0x6d, 0x69, 0x63, 0x18, 0x23, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x10, 0x73, 0x70, 0x6f, 0x75, 0x73, 0x65, 0x50, 0x61, 0x74, 0x72, 0x6f,
	0x6e, 0x79, 0x6d, 0x69, 0x63, 0x12, 0x28, 0x0a, 0x0f, 0x73, 0x70, 0x6f, 0x75, 0x73, 0x65, 0x42,
	0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x74, 0x65, 0x18, 0x24, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x73, 0x70, 0x6f, 0x75, 0x73, 0x65, 0x42, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x74, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x73, 0x70, 0x6f, 0x75, 0x73, 0x65, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x25,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x70, 0x6f, 0x75, 0x73, 0x65, 0x50, 0x68, 0x6f, 0x6e,
	0x65, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x26, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x64, 0x75, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x27, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x64, 0x75, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x36, 0x0a, 0x16, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61,
	0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x28, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x16, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x43,
	0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x61,
	0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74,
	0x18, 0x29, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x12, 0x3a, 0x0a, 0x18, 0x61, 0x64, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x53, 0x75,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x2a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x18, 0x61, 0x64, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x53, 0x75,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x34, 0x0a, 0x15, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x2b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c,
	0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x40, 0x0a, 0x1b, 0x61,
	0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74,
	0x50, 0x61, 0x74, 0x72, 0x6f, 0x6e, 0x79, 0x6d, 0x69, 0x63, 0x18, 0x2c, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x1b, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x74,
	0x61, 0x63, 0x74, 0x50, 0x61, 0x74, 0x72, 0x6f, 0x6e, 0x79, 0x6d, 0x69, 0x63, 0x12, 0x3e, 0x0a,
	0x1a, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x61,
	0x63, 0x74, 0x41, 0x67, 0x72, 0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x2d, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x1a, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x43, 0x6f, 0x6e,
	0x74, 0x61, 0x63, 0x74, 0x41, 0x67, 0x72, 0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x26, 0x0a,
	0x0e, 0x68, 0x61, 0x73, 0x4f, 0x6c, 0x64, 0x50, 0x61, 0x73, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x18,
	0x2e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x68, 0x61, 0x73, 0x4f, 0x6c, 0x64, 0x50, 0x61, 0x73,
	0x73, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x2c, 0x0a, 0x11, 0x6f, 0x6c, 0x64, 0x50, 0x61, 0x73, 0x73,
	0x70, 0x6f, 0x72, 0x74, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x18, 0x2f, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x11, 0x6f, 0x6c, 0x64, 0x50, 0x61, 0x73, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x65, 0x72,
	0x69, 0x65, 0x73, 0x12, 0x2c, 0x0a, 0x11, 0x6f, 0x6c, 0x64, 0x50, 0x61, 0x73, 0x73, 0x70, 0x6f,
	0x72, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x30, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11,
	0x6f, 0x6c, 0x64, 0x50, 0x61, 0x73, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x12, 0x28, 0x0a, 0x0f, 0x6f, 0x6c, 0x64, 0x50, 0x61, 0x73, 0x73, 0x70, 0x6f, 0x72, 0x74,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x31, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6f, 0x6c, 0x64, 0x50,
	0x61, 0x73, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x6f,
	0x6c, 0x64, 0x50, 0x61, 0x73, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x18, 0x32,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6f, 0x6c, 0x64, 0x50, 0x61, 0x73, 0x73, 0x70, 0x6f, 0x72,
	0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x6f, 0x6c, 0x64, 0x50, 0x61, 0x73, 0x73,
	0x70, 0x6f, 0x72, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x18, 0x33, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x10, 0x6f, 0x6c, 0x64, 0x50, 0x61, 0x73, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x4f, 0x72, 0x67, 0x61,
	0x6e, 0x12, 0x2e, 0x0a, 0x12, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x43, 0x72, 0x65, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x18, 0x34, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c,
	0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x6c, 0x64, 0x53, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x35, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x6c, 0x64, 0x53, 0x75, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x6c, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x36, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6f, 0x6c, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x6f,
	0x6c, 0x64, 0x50, 0x61, 0x74, 0x72, 0x6f, 0x6e, 0x79, 0x6d, 0x69, 0x63, 0x18, 0x37, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x6f, 0x6c, 0x64, 0x50, 0x61, 0x74, 0x72, 0x6f, 0x6e, 0x79, 0x6d, 0x69,
	0x63, 0x12, 0x32, 0x0a, 0x14, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x38, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x14, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x34, 0x0a, 0x15, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x43,
	0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x59, 0x65, 0x61, 0x72, 0x18, 0x39,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x15, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x43, 0x72, 0x65, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x59, 0x65, 0x61, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x6c,
	0x69, 0x76, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x18, 0x3a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x6c, 0x69, 0x76, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x77,
	0x6f, 0x72, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x3b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x77,
	0x6f, 0x72, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x77, 0x6f, 0x72, 0x6b, 0x41,
	0x67, 0x65, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x77, 0x6f, 0x72, 0x6b, 0x41, 0x67,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x77, 0x6f, 0x72, 0x6b, 0x44, 0x61, 0x74, 0x65, 0x18, 0x3d, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x77, 0x6f, 0x72, 0x6b, 0x44, 0x61, 0x74, 0x65, 0x12, 0x32, 0x0a,
	0x14, 0x77, 0x6f, 0x72, 0x6b, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x64,
	0x75, 0x73, 0x74, 0x72, 0x79, 0x18, 0x3e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x77, 0x6f, 0x72,
	0x6b, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x64, 0x75, 0x73, 0x74, 0x72,
	0x79, 0x12, 0x2a, 0x0a, 0x10, 0x77, 0x6f, 0x72, 0x6b, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x3f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x77, 0x6f, 0x72,
	0x6b, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x77, 0x6f, 0x72, 0x6b, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x40, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x77, 0x6f, 0x72, 0x6b, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x65,
	0x78, 0x70, 0x65, 0x72, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x41, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x65,
	0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x42, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x22, 0x0a, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x43, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x50, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x2f, 0x0a, 0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x53, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x18, 0x44, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x66, 0x69, 0x73, 0x2e, 0x57, 0x6f,
	0x72, 0x6b, 0x53, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x53, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x45, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x61, 0x73, 0x43, 0x61, 0x72,
	0x18, 0x46, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x68, 0x61, 0x73, 0x43, 0x61, 0x72, 0x12, 0x22,
	0x0a, 0x0c, 0x68, 0x61, 0x73, 0x43, 0x61, 0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x47,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x68, 0x61, 0x73, 0x43, 0x61, 0x72, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x61, 0x72, 0x4d, 0x61, 0x72, 0x6b, 0x18, 0x48, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x61, 0x72, 0x4d, 0x61, 0x72, 0x6b, 0x12, 0x1a, 0x0a, 0x08,
	0x63, 0x61, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x49, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x63, 0x61, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x61, 0x72, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x4a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x61, 0x72,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x61, 0x72, 0x59, 0x65, 0x61,
	0x72, 0x18, 0x4b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x61, 0x72, 0x59, 0x65, 0x61, 0x72,
	0x12, 0x24, 0x0a, 0x0d, 0x68, 0x61, 0x73, 0x52, 0x65, 0x61, 0x6c, 0x45, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x18, 0x4c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x68, 0x61, 0x73, 0x52, 0x65, 0x61, 0x6c,
	0x45, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x36, 0x0a, 0x16, 0x72, 0x65, 0x61, 0x6c, 0x45, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x4d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x72, 0x65, 0x61, 0x6c, 0x45, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x26,
	0x0a, 0x0e, 0x72, 0x65, 0x61, 0x6c, 0x45, 0x73, 0x74, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x4e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x72, 0x65, 0x61, 0x6c, 0x45, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x72, 0x65, 0x61, 0x6c, 0x45, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x73, 0x18, 0x4f, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x72, 0x65, 0x61, 0x6c, 0x45, 0x73, 0x74, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x73,
	0x12, 0x2e, 0x0a, 0x12, 0x72, 0x65, 0x61, 0x6c, 0x45, 0x73, 0x74, 0x61, 0x74, 0x65, 0x57, 0x61,
	0x79, 0x54, 0x6f, 0x47, 0x65, 0x74, 0x18, 0x50, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x72, 0x65,
	0x61, 0x6c, 0x45, 0x73, 0x74, 0x61, 0x74, 0x65, 0x57, 0x61, 0x79, 0x54, 0x6f, 0x47, 0x65, 0x74,
	0x12, 0x2c, 0x0a, 0x11, 0x72, 0x65, 0x61, 0x6c, 0x45, 0x73, 0x74, 0x61, 0x74, 0x65, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x51, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x72, 0x65, 0x61,
	0x6c, 0x45, 0x73, 0x74, 0x61, 0x74, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x20,
	0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x52, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x65, 0x4d, 0x61, 0x69, 0x6c, 0x18, 0x53, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x65, 0x4d, 0x61, 0x69, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x18, 0x54, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x3b,
	0x0a, 0x0e, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x61,
	0x18, 0x55, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x66, 0x69, 0x73, 0x2e, 0x41, 0x64, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0e, 0x61, 0x64, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x22, 0x42, 0x0a, 0x0a, 0x57,
	0x6f, 0x72, 0x6b, 0x53, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x9f, 0x01, 0x0a, 0x0e, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x29, 0x0a, 0x08, 0x71, 0x73, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x66, 0x69, 0x73, 0x2e, 0x51, 0x73, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x52, 0x08, 0x71, 0x73, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x63, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63,
	0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x38, 0x0a, 0x0d, 0x6b, 0x61, 0x6d, 0x65, 0x6c,
	0x65, 0x6f, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x66, 0x69, 0x73, 0x2e, 0x4b, 0x61, 0x6d, 0x65, 0x6c, 0x65, 0x6f, 0x6f, 0x6e, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x0d, 0x6b, 0x61, 0x6d, 0x65, 0x6c, 0x65, 0x6f, 0x6f, 0x6e, 0x44, 0x61, 0x74,
	0x61, 0x22, 0x0a, 0x0a, 0x08, 0x51, 0x73, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x0f, 0x0a,
	0x0d, 0x4b, 0x61, 0x6d, 0x65, 0x6c, 0x65, 0x6f, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x32, 0x65,
	0x0a, 0x0a, 0x46, 0x69, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x57, 0x0a, 0x12,
	0x46, 0x75, 0x6c, 0x6c, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x41, 0x6e, 0x64, 0x53, 0x61,
	0x76, 0x65, 0x12, 0x1e, 0x2e, 0x66, 0x69, 0x73, 0x2e, 0x46, 0x75, 0x6c, 0x6c, 0x4d, 0x61, 0x70,
	0x70, 0x69, 0x6e, 0x67, 0x41, 0x6e, 0x64, 0x53, 0x61, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x66, 0x69, 0x73, 0x2e, 0x46, 0x75, 0x6c, 0x6c, 0x4d, 0x61, 0x70,
	0x70, 0x69, 0x6e, 0x67, 0x41, 0x6e, 0x64, 0x53, 0x61, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x0f, 0x5a, 0x0d, 0x2e, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_internal_pb_fis_proto_rawDescOnce sync.Once
	file_internal_pb_fis_proto_rawDescData = file_internal_pb_fis_proto_rawDesc
)

func file_internal_pb_fis_proto_rawDescGZIP() []byte {
	file_internal_pb_fis_proto_rawDescOnce.Do(func() {
		file_internal_pb_fis_proto_rawDescData = protoimpl.X.CompressGZIP(file_internal_pb_fis_proto_rawDescData)
	})
	return file_internal_pb_fis_proto_rawDescData
}

var file_internal_pb_fis_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_internal_pb_fis_proto_goTypes = []interface{}{
	(*FullMappingAndSaveRequest)(nil),  // 0: fis.FullMappingAndSaveRequest
	(*FullMappingAndSaveResponse)(nil), // 1: fis.FullMappingAndSaveResponse
	(*Application)(nil),                // 2: fis.Application
	(*WorkSector)(nil),                 // 3: fis.WorkSector
	(*AdditionalData)(nil),             // 4: fis.AdditionalData
	(*QsParams)(nil),                   // 5: fis.QsParams
	(*KameleoonData)(nil),              // 6: fis.KameleoonData
}
var file_internal_pb_fis_proto_depIdxs = []int32{
	2, // 0: fis.FullMappingAndSaveRequest.application:type_name -> fis.Application
	3, // 1: fis.Application.workSector:type_name -> fis.WorkSector
	4, // 2: fis.Application.additionalData:type_name -> fis.AdditionalData
	5, // 3: fis.AdditionalData.qsParams:type_name -> fis.QsParams
	6, // 4: fis.AdditionalData.kameleoonData:type_name -> fis.KameleoonData
	0, // 5: fis.FisService.FullMappingAndSave:input_type -> fis.FullMappingAndSaveRequest
	1, // 6: fis.FisService.FullMappingAndSave:output_type -> fis.FullMappingAndSaveResponse
	6, // [6:7] is the sub-list for method output_type
	5, // [5:6] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_internal_pb_fis_proto_init() }
func file_internal_pb_fis_proto_init() {
	if File_internal_pb_fis_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_internal_pb_fis_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FullMappingAndSaveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_pb_fis_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FullMappingAndSaveResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_pb_fis_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Application); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_pb_fis_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkSector); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_pb_fis_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdditionalData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_pb_fis_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QsParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_pb_fis_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KameleoonData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_internal_pb_fis_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_internal_pb_fis_proto_goTypes,
		DependencyIndexes: file_internal_pb_fis_proto_depIdxs,
		MessageInfos:      file_internal_pb_fis_proto_msgTypes,
	}.Build()
	File_internal_pb_fis_proto = out.File
	file_internal_pb_fis_proto_rawDesc = nil
	file_internal_pb_fis_proto_goTypes = nil
	file_internal_pb_fis_proto_depIdxs = nil
}
